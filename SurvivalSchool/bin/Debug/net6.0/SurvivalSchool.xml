<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SurvivalSchool</name>
    </assembly>
    <members>
        <member name="M:SurvivalSchool.Controllers.ForumPostController.GetAll">
            <summary>
            Получение информации о всех постах на формуе
            </summary>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.ForumPostController.GetById(System.Int32)">
            <summary>
            Получение информации о посте по id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.ForumPostController.Add(SurvivalSchool.Contracts.ForumPost.CreateForumPostRequest)">
             <summary>
             Создание нового поста
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                    "ThreadId": 1,
                    "UserId" : 1,
                    "Content" : "string"
                 }
            
             </remarks>
             <param name="forumpost">Пост</param>
             <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.ForumPostController.Update(SurvivalSchool.Contracts.ForumPost.GetForumPostResponse)">
             <summary>
             Изменение информации о посте
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "PostId": 1,
                   "ThreadId": 1,
                   "UserId" : 1,
                   "Content" : "string",
                   "CreatedDate": "2024-09-19T14:05:14.947Z",
                   "UpdatedDate": "2024-09-19T14:05:14.947Z"
                 }
            
             </remarks>
             <param name="forumpost">Пост</param>
             <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.ForumPostController.Delete(System.Int32)">
            <summary>
            Удаление поста
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.ForumThreadController.GetAll">
            <summary>
            Получение информации о всех тредах на формуе
            </summary>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.ForumThreadController.GetById(System.Int32)">
            <summary>
            Получение информации о треде по id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.ForumThreadController.Add(SurvivalSchool.Contracts.ForumThread.CreateForumThreadRequest)">
             <summary>
             Создание нового треда
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                    "Title" : "string",
                    "CreatedBy": 1
                 }
            
             </remarks>
             <param name="forumthread">Тред</param>
             <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.ForumThreadController.Update(SurvivalSchool.Contracts.ForumThread.GetForumThreadResponse)">
             <summary>
             Изменение информации о треде
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "ThreadId": 1,
                   "Title" : "string",
                   "CreatedBy": 1,
                   "CreatedDate": "2024-09-19T14:05:14.947Z",
                   "UpdatedDate": "2024-09-19T14:05:14.947Z"
                 }
            
             </remarks>
             <param name="forumthread">Тред</param>
             <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.ForumThreadController.Delete(System.Int32)">
            <summary>
            Удаление треда
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.LectureController.GetAll">
            <summary>
            Получение информации о всех лекциях
            </summary>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.LectureController.GetById(System.Int32)">
            <summary>
            Получение информации о лекции по id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.LectureController.Add(SurvivalSchool.Contracts.Lecture.CreateLectureRequest)">
             <summary>
             Создание новой лекции
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                    "Title" : "string",
                    "Content" : "string",
                    "CategoryId": 1,
                    "CreatedBy": 1
                 }
            
             </remarks>
             <param name="lecture">Лекция</param>
             <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.LectureController.Update(SurvivalSchool.Contracts.Lecture.GetLectureResponse)">
             <summary>
             Изменение информации о лекции
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "LectureId": 1,
                   "Title" : "string",
                   "Content" : "string",
                   "CategoryId": 1,
                   "CreatedBy": 1,
                   "CreatedDate": "2024-09-19T14:05:14.947Z",
                   "UpdatedDate": "2024-09-19T14:05:14.947Z"
                 }
            
             </remarks>
             <param name="lecture">Лекция</param>
             <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.LectureController.Delete(System.Int32)">
            <summary>
            Удаление лекции
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.TestController.GetAll">
            <summary>
            Получение информации о всех тестах
            </summary>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.TestController.GetById(System.Int32)">
            <summary>
            Получение информации о тесте по id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.TestController.Add(SurvivalSchool.Contracts.Test.CreateTestRequest)">
             <summary>
             Создание нового теста
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                    "Title" : "string",
                    "Description" : "string",
                    "CreatedBy": 1
                 }
            
             </remarks>
             <param name="test">Тест</param>
             <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.TestController.Update(SurvivalSchool.Contracts.Test.GetTestResponse)">
             <summary>
             Изменение информации о тесте
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "TestId": 1,
                   "Title" : "string",
                   "Description" : "string",
                   "CreatedBy": 1,
                   "CreatedDate": "2024-09-19T14:05:14.947Z",
                   "UpdatedDate": "2024-09-19T14:05:14.947Z"
                 }
            
             </remarks>
             <param name="test">Тест</param>
             <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.TestController.Delete(System.Int32)">
            <summary>
            Удаление теста
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.TestQuestionController.GetAll">
            <summary>
            Получение информации о всех вопросах в тестах
            </summary>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.TestQuestionController.GetById(System.Int32)">
            <summary>
            Получение информации о вопросе в тесте по id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.TestQuestionController.Add(SurvivalSchool.Contracts.TestQuestion.CreateTestQuestionRequest)">
             <summary>
             Создание нового вопрса в тесте
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                    "TestId": 1,
                    "QuestionText" : "string",
                    "CorrectAnswer" : "string"
                 }
            
             </remarks>
             <param name="testquestion">Вопрос в тесте</param>
             <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.TestQuestionController.Update(SurvivalSchool.Contracts.TestQuestion.GetTestQuestionResponse)">
             <summary>
             Изменение информации о вопросе в тесте
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "QuestionId": 1,
                   "TestId": 1,
                   "QuestionText" : "string",
                   "CorrectAnswer" : "string",
                   "CreatedDate": "2024-09-19T14:05:14.947Z",
                   "UpdatedDate": "2024-09-19T14:05:14.947Z"
                 }
            
             </remarks>
             <param name="testquestion">Вопрос в тесте</param>
             <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.TestQuestionController.Delete(System.Int32)">
            <summary>
            Удаление вопроса в тесте
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.UserController.GetAll">
            <summary>
            Получение информации о всех пользователях
            </summary>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.UserController.GetById(System.Int32)">
            <summary>
            Получение информации о пользователе по id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.UserController.Add(SurvivalSchool.Contracts.User.CreateUserRequest)">
             <summary>
             Создание нового пользователя
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                    "Username": "string",
                    "Email" : "email@gmail.com",
                    "Pass" : "!Pa$$word123@",
                    "FirstName" : "Иван",
                    "LastName" : "Иванов",
                    "RoleId": 1
                 }
            
             </remarks>
             <param name="user">Пользователь</param>
             <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.UserController.Update(SurvivalSchool.Contracts.User.GetUserResponse)">
             <summary>
             Изменение информации о пользователе
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "UserId": 1,
                   "Username": "string",
                   "Email" : "email@gmail.com",
                   "Pass" : "!Pa$$word123@",
                   "FirstName" : "Иван",
                   "LastName" : "Иванов"
                   "RegistrationDate": "2024-09-19T14:05:14.947Z",
                   "LastLoginDate": "2024-09-19T14:05:14.947Z",
                   "RoleId": 1
                 }
            
             </remarks>
             <param name="user">Пользователь</param>
             <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.UserController.Delete(System.Int32)">
            <summary>
            Удаление пользователя
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.UserTestResultController.GetAll">
            <summary>
            Получение информации о всех результатах тестов пользователей
            </summary>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.UserTestResultController.GetById(System.Int32)">
            <summary>
            Получение информации о результате теста пользователя по id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.UserTestResultController.Add(SurvivalSchool.Contracts.UserTestResult.CreateUserTestResultRequest)">
             <summary>
             Создание нового результата теста пользователя
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                    "UserId": 1,
                    "TestId": 1,
                    "Score" : 5
                 }
            
             </remarks>
             <param name="usertestresult">Результат теста пользователя</param>
             <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.UserTestResultController.Update(SurvivalSchool.Contracts.UserTestResult.GetUserTestResultResponse)">
             <summary>
             Изменение информации о результате теста пользователя
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "ResultId": 1,
                   "UserId": 1,
                   "TestId": 1,
                   "Score" : 5,
                   "CompletedDate": "2024-09-19T14:05:14.947Z"
                 }
            
             </remarks>
             <param name="usertestresult">Результат теста пользователя</param>
             <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.UserTestResultController.Delete(System.Int32)">
            <summary>
            Удаление результата теста пользователя
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.VideoController.GetAll">
            <summary>
            Получение информации о всех видео
            </summary>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.VideoController.GetById(System.Int32)">
            <summary>
            Получение информации о видео по id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.VideoController.Add(SurvivalSchool.Contracts.Video.CreateVideoRequest)">
             <summary>
             Создание нового видео
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                    "Title" : "string",
                    "Url" : "string",
                    "CategoryId": 1,
                    "CreatedBy": 1
                 }
            
             </remarks>
             <param name="video">Видео</param>
             <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.VideoController.Update(SurvivalSchool.Contracts.Video.GetVideoResponse)">
             <summary>
             Изменение информации о видео
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "VideoId": 1,
                   "Title" : "string",
                   "Url" : "string",
                   "CategoryId": 1,
                   "CreatedBy": 1,
                   "CreatedDate": "2024-09-19T14:05:14.947Z",
                   "UpdatedDate": "2024-09-19T14:05:14.947Z"
                 }
            
             </remarks>
             <param name="video">Видео</param>
             <returns></returns>
        </member>
        <member name="M:SurvivalSchool.Controllers.VideoController.Delete(System.Int32)">
            <summary>
            Удаление видео
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
    </members>
</doc>
